{"version":3,"sources":["App.tsx","index.tsx"],"names":["simpleProps","properties","mappedValues","colors","App","useState","aligner","setAligner","typeOfAlign","setTypeOfAlign","styles","className","onChange","e","target","value","map","p","text","language","showLineNumbers","wrapLines","style","color","backgroundColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAIMA,EAAc,CAChB,SACA,QACA,MACA,SACA,UACA,OACA,QACA,eACA,gBACA,eACA,WACA,iBACA,gBACA,cACA,gBACA,aACA,eACA,WACA,aACA,gBACA,mBAGEC,EAAa,CAAC,kBAAmB,gBAAiB,iBAElDC,EAA6C,CAC/C,kBAAmBF,EACnB,gBAAiBA,EACjB,gBAAiBA,GAGfG,EAAS,CAAC,OAAQ,SAAU,OAAQ,SAAU,SAAU,QAAS,UAAW,WA+CnEC,MA7Cf,WACI,MAA8BC,mBAASJ,EAAW,IAAlD,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAsCF,mBAASH,EAAaI,GAAS,IAArE,mBAAOE,EAAP,KAAoBC,EAApB,KAEMC,EAAM,0JAINJ,EAJM,aAIME,EAJN,YAOZ,OACI,qCACI,sBAAKG,UAAU,UAAf,UACI,gCACI,+CACA,wBAAQC,SAAU,SAACC,GAAD,OAAON,EAAWM,EAAEC,OAAOC,QAA7C,SACKd,EAAWe,KAAI,SAACC,GAAD,OACZ,iCAASA,SAIjB,uDACA,wBAAQL,SAAU,SAACC,GAAD,OAAOJ,EAAeI,EAAEC,OAAOC,QAAjD,SACKb,EAAaI,GAASU,KAAI,SAACC,GAAD,OACvB,iCAASA,YAIrB,cAAC,IAAD,CAAWC,KAAMR,EAAQS,SAAS,MAAMC,iBAAiB,EAAMC,WAAS,OAE5E,qBACIV,UAAU,YACVW,MAAK,eACAhB,EAAUE,GAHnB,SAMKL,EAAOa,KAAI,SAACO,GAAD,OACR,qBAAKD,MAAO,CAAEE,gBAAiBD,GAA/B,wBCxEpBE,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,qBAAKhB,UAAU,MAAf,SACI,cAAC,EAAD,QAGRiB,SAASC,eAAe,W","file":"static/js/main.989007ca.chunk.js","sourcesContent":["import 'App.css';\nimport React, { useState } from 'react';\nimport { CodeBlock } from 'react-code-blocks';\n\nconst simpleProps = [\n    'center',\n    'start',\n    'end',\n    'normal',\n    'stretch',\n    'left',\n    'right',\n    'space-around',\n    'space-between',\n    'space-evenly',\n    'baseline',\n    'first baseline',\n    'last baseline',\n    'safe center',\n    'unsafe center',\n    'safe right',\n    'unsafe right',\n    'safe end',\n    'unsafe end',\n    'safe flex-end',\n    'unsafe flex-end',\n];\n\nconst properties = ['justify-content', 'align-content', 'place-content'];\n\nconst mappedValues: { [name: string]: string[] } = {\n    'justify-content': simpleProps,\n    'align-content': simpleProps,\n    'place-content': simpleProps,\n};\n\nconst colors = ['blue', 'yellow', 'lime', 'purple', 'tomato', 'black', '#FF7518', '#2D572C'];\n\nfunction App() {\n    const [aligner, setAligner] = useState(properties[0]);\n    const [typeOfAlign, setTypeOfAlign] = useState(mappedValues[aligner][0]);\n\n    const styles = `.container {\n        display: grid; \n        grid-template-columns: repeat(3, 120px);\n        grid-template-rows: repeat(3, 120px);\n        ${aligner}: ${typeOfAlign};\n    }`;\n\n    return (\n        <>\n            <div className=\"options\">\n                <div>\n                    <h2>Select align:</h2>\n                    <select onChange={(e) => setAligner(e.target.value)}>\n                        {properties.map((p) => (\n                            <option>{p}</option>\n                        ))}\n                    </select>\n\n                    <h2>Select type of align:</h2>\n                    <select onChange={(e) => setTypeOfAlign(e.target.value)}>\n                        {mappedValues[aligner].map((p) => (\n                            <option>{p}</option>\n                        ))}\n                    </select>\n                </div>\n                <CodeBlock text={styles} language=\"css\" showLineNumbers={true} wrapLines />\n            </div>\n            <div\n                className=\"container\"\n                style={{\n                    [aligner]: typeOfAlign,\n                }}\n            >\n                {colors.map((color) => (\n                    <div style={{ backgroundColor: color }}> </div>\n                ))}\n            </div>\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <div className=\"App\">\n            <App />\n        </div>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}