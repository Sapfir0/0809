{"version":3,"sources":["App.tsx","index.tsx"],"names":["simpleProps","properties","mappedValues","colors","App","useState","aligner","setAligner","typeOfAlign","setTypeOfAlign","onChange","e","target","value","map","p","className","style","color","backgroundColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAGMA,EAAc,CAChB,SACA,QACA,MACA,SACA,UACA,OACA,QACA,eACA,gBACA,eACA,WACA,iBACA,gBACA,cACA,gBACA,aACA,eACA,WACA,aACA,gBACA,mBAGEC,EAAa,CAAC,kBAAmB,gBAAiB,iBAElDC,EAA6C,CAC/C,kBAAmBF,EACnB,gBAAiBA,EACjB,gBAAiBA,GAGfG,EAAS,CAAC,OAAQ,SAAU,OAAQ,SAAU,SAAU,QAAS,UAAW,WAkCnEC,MAhCf,WACI,MAA8BC,mBAASJ,EAAW,IAAlD,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAsCF,mBAASH,EAAaI,GAAS,IAArE,mBAAOE,EAAP,KAAoBC,EAApB,KACA,OACI,qCACI,+CACA,wBAAQC,SAAU,SAACC,GAAD,OAAOJ,EAAWI,EAAEC,OAAOC,QAA7C,SACKZ,EAAWa,KAAI,SAACC,GAAD,OACZ,iCAASA,SAIjB,uDACA,wBAAQL,SAAU,SAACC,GAAD,OAAOF,EAAeE,EAAEC,OAAOC,QAAjD,SACKX,EAAaI,GAASQ,KAAI,SAACC,GAAD,OACvB,iCAASA,SAGjB,qBACIC,UAAU,YACVC,MAAK,eACAX,EAAUE,GAHnB,SAMKL,EAAOW,KAAI,SAACI,GAAD,OACR,qBAAKD,MAAO,CAAEE,gBAAiBD,GAA/B,wBC1DpBE,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,qBAAKN,UAAU,MAAf,SACI,cAAC,EAAD,QAGRO,SAASC,eAAe,W","file":"static/js/main.d7c5a81c.chunk.js","sourcesContent":["import 'App.css';\nimport React, { useState } from 'react';\n\nconst simpleProps = [\n    'center',\n    'start',\n    'end',\n    'normal',\n    'stretch',\n    'left',\n    'right',\n    'space-around',\n    'space-between',\n    'space-evenly',\n    'baseline',\n    'first baseline',\n    'last baseline',\n    'safe center',\n    'unsafe center',\n    'safe right',\n    'unsafe right',\n    'safe end',\n    'unsafe end',\n    'safe flex-end',\n    'unsafe flex-end',\n];\n\nconst properties = ['justify-content', 'align-content', 'place-content'];\n\nconst mappedValues: { [name: string]: string[] } = {\n    'justify-content': simpleProps,\n    'align-content': simpleProps,\n    'place-content': simpleProps,\n};\n\nconst colors = ['blue', 'yellow', 'lime', 'purple', 'tomato', 'black', '#FF7518', '#2D572C'];\n\nfunction App() {\n    const [aligner, setAligner] = useState(properties[0]);\n    const [typeOfAlign, setTypeOfAlign] = useState(mappedValues[aligner][0]);\n    return (\n        <>\n            <h2>Select align:</h2>\n            <select onChange={(e) => setAligner(e.target.value)}>\n                {properties.map((p) => (\n                    <option>{p}</option>\n                ))}\n            </select>\n\n            <h2>Select type of align:</h2>\n            <select onChange={(e) => setTypeOfAlign(e.target.value)}>\n                {mappedValues[aligner].map((p) => (\n                    <option>{p}</option>\n                ))}\n            </select>\n            <div\n                className=\"container\"\n                style={{\n                    [aligner]: typeOfAlign,\n                }}\n            >\n                {colors.map((color) => (\n                    <div style={{ backgroundColor: color }}> </div>\n                ))}\n            </div>\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <div className=\"App\">\n            <App />\n        </div>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}